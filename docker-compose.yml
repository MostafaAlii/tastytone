version: '3'

networks:
  laravel:

services:
  # Nginx Server Services
  nginx:
    image: library/nginx:stable-alpine
    container_name: nginx-tastytone
    volumes: 
      - ./src/app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8060:80"
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  # Mysql DB Services
  mysql:
    image: library/mysql:5.7.22
    container_name: mysql-tastytone
    #command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - "3307:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: tastytone # homestead
      MYSQL_USER: root 
      MYSQL_PASSWORD: root # secret
      MYSQL_ROOT_PASSWORD: root # secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  # PHPMyAdmin Services
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-testytone
    restart: unless-stopped
    ports: 
      - 8080:80
    depends_on: 
      - mysql
    environment: 
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    networks: 
      - laravel

  # PHP Library
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-tastytone
    volumes:
      - ./src/app:/var/www/html
    ports: 
      - "9000:9000"
    networks:
      - laravel
 
  # Node JS Services
  npm:
    image: node:13.7
    container_name: npm-testytone
    volumes:
      - ./src/app:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks: 
      - laravel

  # Redis Services
  redis:
    image: redis:alpine
    container_name: redis-testytone
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6380:6379"
    depends_on: 
      - mysql
    volumes:
      - $PWD/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks: 
      - laravel